version: "3"
services:
  subway-system:
    container_name: subway-system
    build:
      context: .
      dockerfile: Dockerfile.yaml
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      NODE_ENV: development
      PORT: 4000
      REDIS_HOST: redis
    ports:
      - "4000:4000"
    command: ["./wait-for-it.sh", "postgres:5432", "--", "npm", "start"]
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
  postgres:
    container_name: postgres
    image: postgres:10.4
    ports:
      - "5432:5432"
    volumes: 
      - ./postgresdata:/var/lib/postgresql/data
      - ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: mysecretpassword
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    platform: linux/amd64
  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "32700:6379"
    command: ["redis-server", "--bind", "redis", "--port", "6379"]
    volumes:
      - redis-data:/data
volumes:
    db-data:
    pgadmin-data:
    redis-data: